
1. Prepare the source code release for packaging.
==> change createCMakeFiles.py to use cmake minimum version 3.7

To avoid a package > 5GB, use a url for the source.

So, I need to download the 20230814.tar.gz, apply the patches, 

The patches are:
CMAKE min version 3.7

==> the version is set here:
build/cmake/createCMakeLists.py:    fo.write('cmake_minimum_required(VERSION 3.0)\n')
build/cmake/createCMakeLists.py:    fo.write('if(${CMAKE_VERSION} VERSION_GREATER "3.17.0")\n')
build/cmake/createCMakeLists.py:    fo.write('if(${CMAKE_VERSION} VERSION_GREATER "3.10.0")\n')
build/cmake/createCMakeLists.py:    fo.write('if(${CMAKE_VERSION} VERSION_GREATER "3.13.0")\n')

find_package(Qt ...)

fo.write{'find_package (Qt5 COMPONENTS Core Gui Widgets Network Qml REQUIRED
# this part is optional ...
PATHS /usr ${SYS_PREFIX}/pkgs NO_DEFAULT_PATH)\n')

 then tar and zip, upload to the lrose-testrelease repo, then use this as the url for conda build.

2. Build the docker containers 
Build docker images:

First build runs as root ...
docker build -t conda-forge-pkg:rocky89v2 .

Second build uses DockerfileWithMamba to install mamba as a user, not as root.
The second build installs  mamba ...
==> https://github.com/conda-forge/miniforge
==> Then installs boa
so that we can use mambabuild ...
==> $ conda mambabuild

docker build -t conda-forge-pkg-mamba:rocky89v2 -f DockerfileWithMamba .

3. Run the last container
docker run --rm -it  conda-forge-pkg-mamba:rocky89v2

conda mambabuild [--dirty]

If successful, there will be a mycore2-...tar.bz2 file.  This is the conda-forge package.



